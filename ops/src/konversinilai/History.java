/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jdat.java
 *
 * Created on 12 Mar 22, 10:10:01
 */

package konversinilai;

import java.awt.Dimension;
import java.util.Arrays;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author user
 */
public class History extends javax.swing.JFrame {

    /** Creates new form jdat */
    public History() {
        initComponents();
   
            VBOS.setModel(new javax.swing.table.DefaultTableModel (
                    data_history,
                    new String [] {
                        "Nilai", "Kriteria"
                    }
             ));
             KROS.setViewportView(VBOS);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        KROS = new javax.swing.JScrollPane();
        VBOS = new javax.swing.JTable();
        Scbar = new java.awt.TextField();
        jLabel1 = new javax.swing.JLabel();
        ASC = new javax.swing.JButton();
        DSC = new javax.swing.JButton();
        SCrh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        VBOS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        KROS.setViewportView(VBOS);

        Scbar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScbarActionPerformed(evt);
            }
        });

        jLabel1.setText("Cari");

        ASC.setText("Sort Ascending");
        ASC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ASCActionPerformed(evt);
            }
        });

        DSC.setText("Sort Descending");
        DSC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DSCActionPerformed(evt);
            }
        });

        SCrh.setText("Cari");
        SCrh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SCrhActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(Scbar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ASC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DSC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(67, 67, 67))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(KROS, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SCrh))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(ASC))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DSC)
                    .addComponent(Scbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SCrh)
                .addGap(43, 43, 43)
                .addComponent(KROS, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    Object [][] data_history = new Object[1][2];
            
    public void dataReciver(int nilai){
        Object[][] slos = new Object[data_history.length][2];

        data_history[data_history.length-1][0] = nilai;

        for (int f = 0; f < data_history.length; f++){
            System.arraycopy(data_history[f], 0, slos[f], 0, 2);
        }
            
        data_history = new Object[data_history.length+1][2];
        
        for (int k = 0; k <  slos.length; k++){
            System.arraycopy(slos[k], 0, data_history[k], 0, 2);
        }

        int[] br = new int[data_history.length-1];
        for (int k = 0; k < data_history.length-1; k++) {
            br[k] = Integer.parseInt(data_history[k][0].toString());
        }
       

        for (int r = 0; r < br.length; r++){
            data_history[r][0] = br[r];
            data_history[r][1] = new Konversi().kon(br[r]);
        }
        
        System.out.println(Arrays.deepToString(data_history));
       sho();
      
    }
    
    private void sho(){
          VBOS.setModel(new javax.swing.table.DefaultTableModel (
                    data_history,
                    new String [] {
                        "Nilai", "Kriteria"
                    }
             ));
             KROS.setViewportView(VBOS);
    }
            
    
    private void ScbarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScbarActionPerformed

}//GEN-LAST:event_ScbarActionPerformed
    
    private void ASCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ASCActionPerformed
        int[] br = new int[data_history.length-1];
        for (int k = 0; k < data_history.length-1; k++) {
            br[k] = Integer.parseInt(data_history[k][0].toString());
        }
        Arrays.sort(br);

        for (int r = 0; r < br.length; r++){
            data_history[r][0] = br[r];
            data_history[r][1] = new Konversi().kon(br[r]);
        }

        sho();
}//GEN-LAST:event_ASCActionPerformed

    private void DSCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DSCActionPerformed
        int[] br = new int[data_history.length-1];
        for (int k = 0; k < data_history.length-1; k++) {
            br[k] = Integer.parseInt(data_history[k][0].toString());
        }
        Arrays.sort(br);

        int vp = 0;
        for (int i=br.length-1;i>=0;i--){
            data_history[vp][0] = br[i];
            data_history[vp][1] =  new Konversi().kon(br[i]);
            vp++;
        }

       sho();
}//GEN-LAST:event_DSCActionPerformed

    private void SCrhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SCrhActionPerformed
        Konversi con = new Konversi();
        Object[][] krl = new Object[1][2];
        int ks = 0;
        if (!Scbar.getText().isEmpty()) {
        for (int r = 0; r < data_history.length-1; r++){

            int intIndex = data_history[r][1].toString().indexOf(Scbar.getText());

            if(intIndex == - 1) {
                intIndex = data_history[r][0].toString().indexOf(Scbar.getText());
                if(intIndex == - 1){
                    con.Label_result.setText("Tidak ditemukan");
                } else {
                    System.arraycopy(data_history[r], 0, krl[ks], 0, 2);
                    Object[][] slos = new Object[krl.length][2];
                    for (int f = 0; f < krl.length; f++){
                    System.arraycopy(krl[f], 0, slos[f], 0, 2);
                    }
                    krl = new Object[krl.length+1][2];
                    for (int k = 0; k <  slos.length; k++){
                    System.arraycopy(slos[k], 0, krl[k], 0, 2);
                    }
                    ks++;
                }

            } else {
                System.arraycopy(data_history[r], 0, krl[ks], 0, 2);
                Object[][] slos = new Object[krl.length][2];
                for (int f = 0; f < krl.length; f++){
                System.arraycopy(krl[f], 0, slos[f], 0, 2);
                }
                krl = new Object[krl.length+1][2];
                for (int k = 0; k <  slos.length; k++){
                System.arraycopy(slos[k], 0, krl[k], 0, 2);
                }
                ks++;
            }

        }
        } else {
            con.Label_result.setText("Isi search field");
        }

            sho();

    }//GEN-LAST:event_SCrhActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new History().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ASC;
    private javax.swing.JButton DSC;
    public javax.swing.JScrollPane KROS;
    private javax.swing.JButton SCrh;
    private java.awt.TextField Scbar;
    public javax.swing.JTable VBOS;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

}
